## üè†/.buildkite/pipeline-release.yml
# Manual triggered pipeline to build and publish Docker images

agents:
  provider: "gcp"
  machineType: "n1-standard-8"
  useVault: true

steps:
  # ----
  # Docker builds for amd64
  # ----
  - group: ":package: amd64 Build and Test"
    key: "build_and_test_amd64"
    if: "build.branch =~ /^[0-9]+\\.[0-9x]+.*/)"
    env:
      - ARCHITECTURE="amd64"
    agents:
      provider: aws
      instanceType: m6i.xlarge
      imagePrefix: ci-amazonlinux-2
    steps:
      - label: "Building amd64 Docker image"
        command: ".buildkite/publish/build-docker.sh"
        key: "build_docker_image_amd64"
        artifact_paths: ".artifacts/elastic-connectors-docker-*.tar.gz"
      - label: "Testing amd64 Docker image"
        depends_on: "build_docker_image_amd64"
        command: ".buildkite/publish/test-docker.sh"
  # ----
  # Docker builds for arm64
  # ----
  - group: ":package: arm64 Build and Test"
    key: "build_and_test_arm64"
    if: "build.branch =~ /^[0-9]+\\.[0-9x]+.*/)"
    env:
      - ARCHITECTURE="arm64"
    agents:
      provider: aws
      instanceType: m6g.xlarge
      imagePrefix: ci-amazonlinux-2-aarch64
      diskSizeGb: 40
      diskName: '/dev/xvda'
    steps:
      - label: "Building arm64 Docker image"
        command: ".buildkite/publish/build-docker.sh"
        key: "build_docker_image_arm64"
        artifact_paths: ".artifacts/elastic-connectors-docker-*.tar.gz"
      - label: "Testing arm64 Docker image"
        depends_on: "build_docker_image_arm64"
        command: ".buildkite/publish/test-docker.sh"
  # ----
  # Multiarch Docker image build and push
  # ----
  - group: ":truck: Publish images"
    depends_on:
      - "build_and_test_amd64"
      - "build_and_test_arm64"
    steps:
      - label: "Push amd64 Docker image"
        key: "push_amd64_docker_image"
        env:
          - ARCHITECTURE="amd64"
        agents:
          provider: aws
          instanceType: m6i.xlarge
          imagePrefix: ci-amazonlinux-2
        commands:
          - "mkdir -p .artifacts"
          - buildkite-agent artifact download '.artifacts/*.tar.gz*' .artifacts/ --step build_docker_image_amd64
          - ".buildkite/publish/push-docker.sh"
      - label: "Push arm64 Docker image"
        key: "push_arm64_docker_image"
        env:
          - ARCHITECTURE="arm64"
        agents:
          provider: aws
          instanceType: m6g.xlarge
          imagePrefix: ci-amazonlinux-2-aarch64
          diskSizeGb: 40
          diskName: '/dev/xvda'
        commands:
          - "mkdir -p .artifacts"
          - buildkite-agent artifact download '.artifacts/*.tar.gz*' .artifacts/ --step build_docker_image_arm64
          - ".buildkite/publish/push-docker.sh"
      - label: "Build and push multiarch Docker image"
        command: ".buildkite/publish/build-multiarch-docker.sh"
        depends_on:
          - "push_amd64_docker_image"
          - "push_arm64_docker_image"
