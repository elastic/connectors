definitions:
  steps:
    - step: &test-agents
        agents:
          provider: "gcp"
          machineType: "n1-standard-8"
          useVault: true
          image: family/enterprise-search-ubuntu-2204-connectors-py
  retries: &retries
    retry:
      automatic:
        - exit_status: -1  # Connection to the Agent was lost
          signal_reason: none
          limit: 2
        - exit_status: 255  # Timeout
          signal_reason: none
          limit: 2
        - exit_status: 2  # Flaky test
          signal_reason: none
          limit: 2

notify:
  - if: 'build.branch =~ /^((main)|([0-9]+\.[0-9]+))\$/ && (build.state == "failed" || pipeline.started_passing)'
    slack:
      channels:
        - "#search-et-alerts"
      message: "${BUILDKITE_MESSAGE}"

env:
  DOCKERFILE_PATH: "Dockerfile.wolfi"

steps:
  - label: ":eyes: Notice check"
    <<: *test-agents
    <<: *retries
    key: "notice_check"
    command: ".buildkite/run_notice_check.sh"
    env:
      PYTHON_VERSION: "3.11" # We don't really care about notice on multiple versions
    timeout_in_minutes: 5

  - wait # we wait so that there was no race between fixing notice and make autoformat

  - label: ":face_with_peeking_eye: Lint"
    <<: *test-agents
    <<: *retries
    key: "lint"
    command: ".buildkite/run_linter.sh"
    env:
      PYTHON_VERSION: "3.11" # We don't really care about linter on multiple versions for now
    timeout_in_minutes: 5

  - label: ":pytest: Test with Python {{ matrix }}"
    <<: *test-agents
    <<: *retries
    key: "unit_tests"
    command: ".buildkite/run_tests.sh"
    env:
      PYTHON_VERSION: "{{ matrix }}"
    timeout_in_minutes: 5
    matrix:
      - "3.10"
      - "3.11"

  - label: ":shipit: Smoke test"
    <<: *retries
    key: "smoke_test"
    command: ".buildkite/run_functional_test.sh"
    env:
      PYTHON_VERSION: "3.11" # TODO: can actually do a matrix too
      CONNECTOR: "dir"
      DATA_SIZE: "small"
    timeout_in_minutes: 45
    agents:
      machineType: "n1-standard-8"
      provider: "gcp"
      useVault: true
      image: family/enterprise-search-ubuntu-2204-connectors-py

  - label: ":sweating: Checking for changes in connectors"
    key: "relevant_ftests"
    plugins:
      monorepo-diff#v1.1.0:
        diff: ".buildkite/diff ${BUILDKITE_COMMIT}"
        wait: false
        watch:
          - path:
            - "app/connectors_service/connectors/sources/mysql/**"
            - "app/connectors_service/tests/sources/fixtures/mysql/**"
            - "app/connectors_service/tests/sources/fixtures/fixture.py"
            - "${DOCKERFILE_PATH}"
            - "app/connectors_service/tests/Dockerfile.ftest"
            - "app/connectors_service/pyproject.toml"
            config:
              label: "ðŸ”¨ MySQL"
              <<: *test-agents
              <<: *retries
              env:
                - PYTHON_VERSION=3.11
                - DATA_SIZE=small
                - CONNECTOR=mysql
              command:
                - ".buildkite/run_functional_test.sh"
              artifact_paths:
                - "perf8-report-*/**/*"

          - path:
            - "app/connectors_service/connectors/sources/network_drive/**"
            - "app/connectors_service/tests/sources/fixtures/network_drive/**"
            - "app/connectors_service/tests/sources/fixtures/fixture.py"
            - "${DOCKERFILE_PATH}"
            - "app/connectors_service/tests/Dockerfile.ftest"
            - "app/connectors_service/pyproject.toml"
            config:
              label: "ðŸ”¨ Network Drive"
              <<: *test-agents
              <<: *retries
              env:
                - PYTHON_VERSION=3.11
                - DATA_SIZE=small
                - CONNECTOR=network_drive
              command:
                - ".buildkite/run_functional_test.sh"
              artifact_paths:
                - "perf8-report-*/**/*"

          - path:
            - "app/connectors_service/connectors/sources/s3/**"
            - "app/connectors_service/tests/sources/fixtures/s3/**"
            - "app/connectors_service/tests/sources/fixtures/fixture.py"
            - "${DOCKERFILE_PATH}"
            - "app/connectors_service/tests/Dockerfile.ftest"
            - "app/connectors_service/pyproject.toml"
            config:
              label: "ðŸ”¨ Amazon S3"
              <<: *test-agents
              <<: *retries
              env:
                - PYTHON_VERSION=3.11
                - DATA_SIZE=small
                - CONNECTOR=s3
              command:
                - ".buildkite/run_functional_test.sh"
              artifact_paths:
                - "perf8-report-*/**/*"

          - path:
            - "app/connectors_service/connectors/sources/google_cloud_storage/**"
            - "app/connectors_service/tests/sources/fixtures/google_cloud_storage/**"
            - "app/connectors_service/tests/sources/fixtures/fixture.py"
            - "${DOCKERFILE_PATH}"
            - "app/connectors_service/tests/Dockerfile.ftest"
            - "app/connectors_service/pyproject.toml"
            config:
              label: "ðŸ”¨ Google Cloud Storage"
              <<: *test-agents
              <<: *retries
              env:
                - PYTHON_VERSION=3.11
                - DATA_SIZE=small
                - CONNECTOR=google_cloud_storage
              command:
                - ".buildkite/run_functional_test.sh"
              artifact_paths:
                - "perf8-report-*/**/*"

          - path:
            - "app/connectors_service/connectors/sources/azure_blob_storage/**"
            - "app/connectors_service/tests/sources/fixtures/azure_blob_storage/**"
            - "app/connectors_service/tests/sources/fixtures/fixture.py"
            - "${DOCKERFILE_PATH}"
            - "app/connectors_service/tests/Dockerfile.ftest"
            - "app/connectors_service/pyproject.toml"
            config:
              label: "ðŸ”¨ Azure Blob Storage"
              <<: *test-agents
              <<: *retries
              env:
                - PYTHON_VERSION=3.11
                - DATA_SIZE=small
                - CONNECTOR=azure_blob_storage
              command:
                - ".buildkite/run_functional_test.sh"
              artifact_paths:
                - "perf8-report-*/**/*"

          - path:
            - "app/connectors_service/connectors/sources/postgresql/**"
            - "app/connectors_service/tests/sources/fixtures/postgresql/**"
            - "app/connectors_service/tests/sources/fixtures/fixture.py"
            - "${DOCKERFILE_PATH}"
            - "app/connectors_service/tests/Dockerfile.ftest"
            - "app/connectors_service/pyproject.toml"
            config:
              label: "ðŸ”¨ Postgresql"
              <<: *test-agents
              <<: *retries
              env:
                - PYTHON_VERSION=3.11
                - DATA_SIZE=small
                - CONNECTOR=postgresql
              command:
                - ".buildkite/run_functional_test.sh"
              artifact_paths:
                - "perf8-report-*/**/*"

          - path:
            - "app/connectors_service/connectors/sources/directory/**"
            - "app/connectors_service/tests/sources/fixtures/dir/**"
            - "app/connectors_service/tests/sources/fixtures/fixture.py"
            - "${DOCKERFILE_PATH}"
            - "app/connectors_service/tests/Dockerfile.ftest"
            - "app/connectors_service/pyproject.toml"
            config:
              label: "ðŸ”¨ System Directory"
              <<: *test-agents
              <<: *retries
              env:
                - PYTHON_VERSION=3.11
                - DATA_SIZE=small
                - CONNECTOR=dir
              command:
                - ".buildkite/run_functional_test.sh"
              artifact_paths:
                - "perf8-report-*/**/*"

          - path:
            - "app/connectors_service/connectors/sources/oracle/**"
            - "app/connectors_service/tests/sources/fixtures/oracle/**"
            - "app/connectors_service/tests/sources/fixtures/fixture.py"
            - "${DOCKERFILE_PATH}"
            - "app/connectors_service/tests/Dockerfile.ftest"
            - "app/connectors_service/pyproject.toml"
            config:
              label: "ðŸ”¨ Oracle Database"
              <<: *test-agents
              <<: *retries
              env:
                - PYTHON_VERSION=3.11
                - DATA_SIZE=small
                - CONNECTOR=oracle
              command:
                - ".buildkite/run_functional_test.sh"
              artifact_paths:
                - "perf8-report-*/**/*"

          - path:
            - "app/connectors_service/connectors/sources/sharepoint/sharepoint_server/**"
            - "app/connectors_service/tests/sources/fixtures/sharepoint_server/**"
            - "app/connectors_service/tests/sources/fixtures/fixture.py"
            - "${DOCKERFILE_PATH}"
            - "app/connectors_service/tests/Dockerfile.ftest"
            - "app/connectors_service/pyproject.toml"
            config:
              label: "ðŸ”¨ Sharepoint Server"
              <<: *test-agents
              <<: *retries
              env:
                - PYTHON_VERSION=3.11
                - DATA_SIZE=small
                - CONNECTOR=sharepoint_server
              command:
                - ".buildkite/run_functional_test.sh"
              artifact_paths:
                - "perf8-report-*/**/*"

          - path:
            - "app/connectors_service/connectors/sources/sharepoint/sharepoint_online/**"
            - "app/connectors_service/tests/sources/fixtures/sharepoint_online/**"
            - "app/connectors_service/tests/sources/fixtures/fixture.py"
            - "${DOCKERFILE_PATH}"
            - "app/connectors_service/tests/Dockerfile.ftest"
            - "app/connectors_service/pyproject.toml"
            config:
              label: "ðŸ”¨ Sharepoint Online"
              <<: *test-agents
              <<: *retries
              env:
                - PYTHON_VERSION=3.11
                - DATA_SIZE=small
                - CONNECTOR=sharepoint_online
              command:
                - ".buildkite/run_functional_test.sh"
              artifact_paths:
                - "perf8-report-*/**/*"

          - path:
            - "app/connectors_service/connectors/sources/mssql/**"
            - "app/connectors_service/tests/sources/fixtures/mssql/**"
            - "app/connectors_service/tests/sources/fixtures/fixture.py"
            - "${DOCKERFILE_PATH}"
            - "app/connectors_service/tests/Dockerfile.ftest"
            - "app/connectors_service/pyproject.toml"
            config:
              label: "ðŸ”¨ Microsoft SQL"
              <<: *test-agents
              <<: *retries
              env:
                - PYTHON_VERSION=3.11
                - DATA_SIZE=small
                - CONNECTOR=mssql
              command:
                - ".buildkite/run_functional_test.sh"
              artifact_paths:
                - "perf8-report-*/**/*"

          - path:
            - "app/connectors_service/connectors/sources/atlassian/**"
            - "app/connectors_service/tests/sources/fixtures/jira/**"
            - "app/connectors_service/tests/sources/fixtures/fixture.py"
            - "${DOCKERFILE_PATH}"
            - "app/connectors_service/tests/Dockerfile.ftest"
            - "app/connectors_service/pyproject.toml"
            config:
              label: "ðŸ”¨ Jira"
              <<: *test-agents
              <<: *retries
              env:
                - PYTHON_VERSION=3.11
                - DATA_SIZE=small
                - CONNECTOR=jira
              command:
                - ".buildkite/run_functional_test.sh"
              artifact_paths:
                - "perf8-report-*/**/*"

          - path:
            - "app/connectors_service/connectors/sources/atlassian/**"
            - "app/connectors_service/tests/sources/fixtures/confluence/**"
            - "app/connectors_service/tests/sources/fixtures/fixture.py"
            - "${DOCKERFILE_PATH}"
            - "app/connectors_service/tests/Dockerfile.ftest"
            - "app/connectors_service/pyproject.toml"
            config:
              label: "ðŸ”¨ Confluence"
              <<: *test-agents
              <<: *retries
              env:
                - PYTHON_VERSION=3.11
                - DATA_SIZE=small
                - CONNECTOR=confluence
              command:
                - ".buildkite/run_functional_test.sh"
              artifact_paths:
                - "perf8-report-*/**/*"

          - path:
            - "app/connectors_service/connectors/sources/servicenow.py"
            - "app/connectors_service/tests/sources/fixtures/servicenow/**"
            - "app/connectors_service/tests/sources/fixtures/fixture.py"
            - "${DOCKERFILE_PATH}"
            - "app/connectors_service/tests/Dockerfile.ftest"
            - "app/connectors_service/pyproject.toml"
            config:
              label: "ðŸ”¨ ServiceNow"
              <<: *test-agents
              <<: *retries
              env:
                - PYTHON_VERSION=3.11
                - DATA_SIZE=small
                - CONNECTOR=servicenow
              command:
                - ".buildkite/run_functional_test.sh"
              artifact_paths:
                - "perf8-report-*/**/*"

          - path:
            - "app/connectors_service/connectors/sources/mongo/**"
            - "app/connectors_service/tests/sources/fixtures/mongodb/**"
            - "app/connectors_service/tests/sources/fixtures/fixture.py"
            - "${DOCKERFILE_PATH}"
            - "app/connectors_service/tests/Dockerfile.ftest"
            - "app/connectors_service/pyproject.toml"
            config:
              label: "ðŸ”¨ MongoDB"
              <<: *test-agents
              <<: *retries
              env:
                - PYTHON_VERSION=3.11
                - DATA_SIZE=small
                - CONNECTOR=mongodb
              command:
                - ".buildkite/run_functional_test.sh"
              artifact_paths:
                - "perf8-report-*/**/*"

          - path:
            - "app/connectors_service/connectors/sources/github/**"
            - "app/connectors_service/tests/sources/fixtures/github/**"
            - "app/connectors_service/tests/sources/fixtures/fixture.py"
            - "${DOCKERFILE_PATH}"
            - "app/connectors_service/tests/Dockerfile.ftest"
            - "app/connectors_service/pyproject.toml"
            config:
              label: "ðŸ”¨ GitHub"
              <<: *test-agents
              <<: *retries
              env:
                - PYTHON_VERSION=3.11
                - DATA_SIZE=small
                - CONNECTOR=github
              command:
                - ".buildkite/run_functional_test.sh"
              artifact_paths:
                - "perf8-report-*/**/*"

          - path:
            - "app/connectors_service/connectors/sources/google_drive/**"
            - "app/connectors_service/tests/sources/fixtures/google_drive/**"
            - "app/connectors_service/tests/sources/fixtures/fixture.py"
            - "${DOCKERFILE_PATH}"
            - "app/connectors_service/tests/Dockerfile.ftest"
            - "app/connectors_service/pyproject.toml"
            config:
              label: "ðŸ”¨ Google Drive"
              <<: *test-agents
              <<: *retries
              env:
                - PYTHON_VERSION=3.11
                - DATA_SIZE=small
                - CONNECTOR=google_drive
              command:
                - ".buildkite/run_functional_test.sh"
              artifact_paths:
                - "perf8-report-*/**/*"

          - path:
            - "app/connectors_service/connectors/sources/dropbox.py"
            - "app/connectors_service/tests/sources/fixtures/dropbox/**"
            - "app/connectors_service/tests/sources/fixtures/fixture.py"
            - "${DOCKERFILE_PATH}"
            - "app/connectors_service/tests/Dockerfile.ftest"
            - "app/connectors_service/pyproject.toml"
            config:
              label: "ðŸ”¨ Dropbox"
              <<: *test-agents
              <<: *retries
              env:
                - PYTHON_VERSION=3.11
                - DATA_SIZE=small
                - CONNECTOR=dropbox
              command:
                - ".buildkite/run_functional_test.sh"
              artifact_paths:
                - "perf8-report-*/**/*"

          - path:
            - "app/connectors_service/connectors/sources/onedrive/**"
            - "app/connectors_service/tests/sources/fixtures/onedrive/**"
            - "app/connectors_service/tests/sources/fixtures/fixture.py"
            - "${DOCKERFILE_PATH}"
            - "app/connectors_service/tests/Dockerfile.ftest"
            - "app/connectors_service/pyproject.toml"
            config:
              label: "ðŸ”¨ OneDrive"
              <<: *test-agents
              <<: *retries
              env:
                - PYTHON_VERSION=3.11
                - DATA_SIZE=small
                - CONNECTOR=onedrive
              command:
                - ".buildkite/run_functional_test.sh"
              artifact_paths:
                - "perf8-report-*/**/*"

          - path:
            - "app/connectors_service/connectors/sources/salesforce/**"
            - "app/connectors_service/tests/sources/fixtures/salesforce/**"
            - "app/connectors_service/tests/sources/fixtures/fixture.py"
            - "${DOCKERFILE_PATH}"
            - "app/connectors_service/tests/Dockerfile.ftest"
            - "app/connectors_service/pyproject.toml"
            config:
              label: "ðŸ”¨ Salesforce"
              <<: *test-agents
              <<: *retries
              env:
                - PYTHON_VERSION=3.11
                - DATA_SIZE=small
                - CONNECTOR=salesforce
              command:
                - ".buildkite/run_functional_test.sh"
              artifact_paths:
                - "perf8-report-*/**/*"

          - path:
            - "app/connectors_service/connectors/sources/zoom/**"
            - "app/connectors_service/tests/sources/fixtures/zoom/**"
            - "app/connectors_service/tests/sources/fixtures/fixture.py"
            - "${DOCKERFILE_PATH}"
            - "app/connectors_service/tests/Dockerfile.ftest"
            - "app/connectors_service/pyproject.toml"
            config:
              label: "ðŸ”¨ Zoom"
              <<: *test-agents
              <<: *retries
              env:
                - PYTHON_VERSION=3.11
                - DATA_SIZE=small
                - CONNECTOR=zoom
              command:
                - ".buildkite/run_functional_test.sh"
              artifact_paths:
                - "perf8-report-*/**/*"

          - path:
            - "app/connectors_service/connectors/sources/box/**"
            - "app/connectors_service/tests/sources/fixtures/box/**"
            - "app/connectors_service/tests/sources/fixtures/fixture.py"
            - "${DOCKERFILE_PATH}"
            - "app/connectors_service/tests/Dockerfile.ftest"
            - "app/connectors_service/pyproject.toml"
            config:
              label: "ðŸ”¨ Box"
              <<: *test-agents
              <<: *retries
              env:
                - PYTHON_VERSION=3.11
                - DATA_SIZE=small
                - CONNECTOR=box
              command:
                - ".buildkite/run_functional_test.sh"
              artifact_paths:
                - "perf8-report-*/**/*"

          - path:
            - "app/connectors_service/connectors/sources/microsoft_teams.py"
            - "app/connectors_service/tests/sources/fixtures/microsoft_teams/**"
            - "app/connectors_service/tests/sources/fixtures/fixture.py"
            - "${DOCKERFILE_PATH}"
            - "app/connectors_service/tests/Dockerfile.ftest"
            - "app/connectors_service/pyproject.toml"
            config:
              label: "ðŸ”¨ Microsoft Teams"
              <<: *test-agents
              <<: *retries
              env:
                - PYTHON_VERSION=3.11
                - DATA_SIZE=small
                - CONNECTOR=microsoft_teams
              command:
                - ".buildkite/run_functional_test.sh"
              artifact_paths:
                - "perf8-report-*/**/*"

          - path:
            - "app/connectors_service/connectors/sources/notion/**"
            - "app/connectors_service/tests/sources/fixtures/notion/**"
            - "app/connectors_service/tests/sources/fixtures/fixture.py"
            - "${DOCKERFILE_PATH}"
            - "app/connectors_service/tests/Dockerfile.ftest"
            - "app/connectors_service/pyproject.toml"
            config:
              label: "ðŸ”¨ Notion"
              <<: *test-agents
              <<: *retries
              env:
                - PYTHON_VERSION=3.11
                - DATA_SIZE=small
                - CONNECTOR=notion
              command:
                - ".buildkite/run_functional_test.sh"
              artifact_paths:
                - "perf8-report-*/**/*"

          - path:
            - "app/connectors_service/connectors/sources/redis/**"
            - "app/connectors_service/tests/sources/fixtures/redis/**"
            - "app/connectors_service/tests/sources/fixtures/fixture.py"
            - "${DOCKERFILE_PATH}"
            - "app/connectors_service/tests/Dockerfile.ftest"
            - "app/connectors_service/pyproject.toml"
            config:
              label: "ðŸ”¨ Redis"
              <<: *test-agents
              <<: *retries
              env:
                - PYTHON_VERSION=3.11
                - DATA_SIZE=small
                - CONNECTOR=redis
              command:
                - ".buildkite/run_functional_test.sh"
              artifact_paths:
                - "perf8-report-*/**/*"

          - path:
            - "app/connectors_service/connectors/sources/graphql.py"
            - "app/connectors_service/tests/sources/fixtures/graphql/**"
            - "app/connectors_service/tests/sources/fixtures/fixture.py"
            - "${DOCKERFILE_PATH}"
            - "app/connectors_service/tests/Dockerfile.ftest"
            - "app/connectors_service/pyproject.toml"
            config:
              label: "ðŸ”¨ GraphQL"
              <<: *test-agents
              <<: *retries
              env:
                - PYTHON_VERSION=3.11
                - DATA_SIZE=small
                - CONNECTOR=graphql
              command:
                - ".buildkite/run_functional_test.sh"
              artifact_paths:
                - "perf8-report-*/**/*"

          - path:
            - "app/connectors_service/connectors/sources/sandfly/**"
            - "app/connectors_service/tests/sources/fixtures/sandfly/**"
            - "app/connectors_service/tests/sources/fixtures/fixture.py"
            - "${DOCKERFILE_PATH}"
            - "app/connectors_service/tests/Dockerfile.ftest"
            - "requirements/**"
            config:
              label: "ðŸ”¨ Sandfly"
              <<: *test-agents
              <<: *retries
              env:
                - PYTHON_VERSION=3.11
                - DATA_SIZE=small
                - CONNECTOR=sandfly
              command:
                - ".buildkite/run_functional_test.sh"
              artifact_paths:
                - "perf8-report-*/**/*"

  # ----
  # DRA publishing
  # ----
  - group: ":truck: Packaging and DRA"
    key: "mbp_dra_group"
    if: "(build.branch == \"main\" || build.branch == \"9.2\" || build.branch == \"9.1\" || build.branch == \"9.0\" || build.branch == \"8.19\" || build.branch == \"8.18\" || build.pull_request.labels includes \"ci:packaging\")" # Add new maintenance branches here
    depends_on:
      - "lint"
      - "unit_tests"
      - "smoke_test"
      - "relevant_ftests"
    steps:
      # ----
      # Docker builds for amd64
      # ----
      - label: "Building amd64 Docker image"
        agents:
          provider: aws
          instanceType: m6i.xlarge
          imagePrefix: ci-amazonlinux-2
        env:
          ARCHITECTURE: "amd64"
          DOCKERFILE_PATH: "Dockerfile.wolfi"
        command: ".buildkite/publish/build-docker.sh"
        key: "build_docker_image_amd64"
        artifact_paths: ".artifacts/*.tar.gz"
      - label: "Testing amd64 Docker image"
        agents:
          provider: aws
          instanceType: m6i.xlarge
          imagePrefix: ci-amazonlinux-2
        env:
          ARCHITECTURE: "amd64"
          DOCKERFILE_PATH: "Dockerfile.wolfi"
        depends_on: "build_docker_image_amd64"
        key: "test_docker_image_amd64"
        commands:
          - "mkdir -p .artifacts"
          - buildkite-agent artifact download '.artifacts/*.tar.gz*' .artifacts/ --step build_docker_image_amd64
          - ".buildkite/publish/test-docker.sh"

      # ----
      # Docker builds for arm64
      # ----
      - label: "Building arm64 Docker image"
        agents:
          provider: aws
          instanceType: m6g.xlarge
          imagePrefix: ci-amazonlinux-2-aarch64
          diskSizeGb: 40
          diskName: '/dev/xvda'
        env:
          ARCHITECTURE: "arm64"
          DOCKERFILE_PATH: "Dockerfile.wolfi"
        command: ".buildkite/publish/build-docker.sh"
        key: "build_docker_image_arm64"
        artifact_paths: ".artifacts/*.tar.gz"
      - label: "Testing arm64 Docker image"
        agents:
          provider: aws
          instanceType: m6g.xlarge
          imagePrefix: ci-amazonlinux-2-aarch64
          diskSizeGb: 40
          diskName: '/dev/xvda'
        env:
          ARCHITECTURE: "arm64"
          DOCKERFILE_PATH: "Dockerfile.wolfi"
        depends_on: "build_docker_image_arm64"
        key: "test_docker_image_arm64"
        commands:
          - "mkdir -p .artifacts"
          - buildkite-agent artifact download '.artifacts/*.tar.gz*' .artifacts/ --step build_docker_image_arm64
          - ".buildkite/publish/test-docker.sh"

      # ----
      # OSS Dockerfile build, tests and vunlerability scan on amd64
      # ----
      - label: "Building amd64 Docker image from OSS Dockerfile"
        agents:
          provider: aws
          instanceType: m6i.xlarge
          imagePrefix: ci-amazonlinux-2
        env:
          ARCHITECTURE: "amd64"
          DOCKERFILE_PATH: "Dockerfile"
          DOCKER_IMAGE_NAME: "docker.elastic.co/ci-agent-images/elastic-connectors-oss-dockerfile"
          DOCKER_ARTIFACT_KEY: "elastic-connectors-oss-dockerfile"
        command: ".buildkite/publish/build-docker.sh"
        key: "build_oss_dockerfile_image_amd64"
        artifact_paths: ".artifacts/*.tar.gz"
      - label: "Testing amd64 image built from OSS Dockerfile"
        agents:
          provider: aws
          instanceType: m6i.xlarge
          imagePrefix: ci-amazonlinux-2
        env:
          ARCHITECTURE: "amd64"
          DOCKERFILE_PATH: "Dockerfile"
          DOCKER_IMAGE_NAME: "docker.elastic.co/ci-agent-images/elastic-connectors-oss-dockerfile"
          DOCKER_ARTIFACT_KEY: "elastic-connectors-oss-dockerfile"
        depends_on: "build_oss_dockerfile_image_amd64"
        key: "test_oss_dockerfile_image_amd64"
        commands:
          - "mkdir -p .artifacts"
          - buildkite-agent artifact download '.artifacts/*.tar.gz*' .artifacts/ --step build_oss_dockerfile_image_amd64
          - ".buildkite/publish/test-docker.sh"
      - label: "Trivy Scan amd64 OSS Dockerfile image"
        timeout_in_minutes: 10
        depends_on:
          - test_oss_dockerfile_image_amd64
        key: "trivy-scan-amd64-oss-dockerfile-image"
        agents:
          provider: k8s
          image: "docker.elastic.co/ci-agent-images/trivy:latest"
        command: |-
          mkdir -p .artifacts
          buildkite-agent artifact download '.artifacts/*.tar.gz*' .artifacts/ --step build_oss_dockerfile_image_amd64
          trivy --version
          env | grep TRIVY
          find .artifacts -type f -name '*.tar.gz*' -exec trivy image --quiet --input {} \;

      # ----
      # OSS Dockerfile build, tests and vunlerability scan on arm64
      # ----
      - label: "Building arm64 Docker image from OSS Dockerfile"
        agents:
          provider: aws
          instanceType: m6g.xlarge
          imagePrefix: ci-amazonlinux-2-aarch64
          diskSizeGb: 40
          diskName: '/dev/xvda'
        env:
          ARCHITECTURE: "arm64"
          DOCKERFILE_PATH: "Dockerfile"
          DOCKER_IMAGE_NAME: "docker.elastic.co/ci-agent-images/elastic-connectors-oss-dockerfile"
          DOCKER_ARTIFACT_KEY: "elastic-connectors-oss-dockerfile"
        command: ".buildkite/publish/build-docker.sh"
        key: "build_oss_dockerfile_image_arm64"
        artifact_paths: ".artifacts/*.tar.gz"
      - label: "Testing arm64 image built from OSS Dockerfile"
        agents:
          provider: aws
          instanceType: m6g.xlarge
          imagePrefix: ci-amazonlinux-2-aarch64
          diskSizeGb: 40
          diskName: '/dev/xvda'
        env:
          ARCHITECTURE: "arm64"
          DOCKERFILE_PATH: "Dockerfile"
          DOCKER_IMAGE_NAME: "docker.elastic.co/ci-agent-images/elastic-connectors-oss-dockerfile"
          DOCKER_ARTIFACT_KEY: "elastic-connectors-oss-dockerfile"
        depends_on: "build_oss_dockerfile_image_arm64"
        key: "test_oss_dockerfile_image_arm64"
        commands:
          - "mkdir -p .artifacts"
          - buildkite-agent artifact download '.artifacts/*.tar.gz*' .artifacts/ --step build_oss_dockerfile_image_arm64
          - ".buildkite/publish/test-docker.sh"
      - label: "Trivy Scan arm64 OSS Dockerfile image"
        timeout_in_minutes: 10
        depends_on:
          - test_oss_dockerfile_image_arm64
        key: "trivy-scan-arm64-oss-dockerfile-image"
        agents:
          provider: k8s
          image: "docker.elastic.co/ci-agent-images/trivy:latest"
        command: |-
          mkdir -p .artifacts
          buildkite-agent artifact download '.artifacts/*.tar.gz*' .artifacts/ --step build_oss_dockerfile_image_arm64
          trivy --version
          env | grep TRIVY
          find .artifacts -type f -name '*.tar.gz*' -exec trivy image --quiet --input {} \;

      - label: ":truck: Publish DRA Items"
        <<: *test-agents
        key: "publish-dra-artifacts"
        timeout_in_minutes: 45
        depends_on:
          - test_docker_image_amd64
          - test_docker_image_arm64
          - test_oss_dockerfile_image_amd64
          - test_oss_dockerfile_image_arm64
        command: ".buildkite/publish/dra/init_dra_publishing.sh"
