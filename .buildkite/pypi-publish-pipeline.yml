## .buildkite/pypi-publish-pipeline.yml
# Manually-triggered pipeline to build and publish Python packages to PyPI
notify:
  - if: 'build.branch =~ /^((main)|([0-9]+\.[0-9]+))$/ && (build.state == "failed" || pipeline.started_passing)'
    slack:
      channels:
        - "#search-et-alerts"
      message: "${BUILDKITE_MESSAGE}"

# add paths for all the packages we want to build here
# then make sure they're added to the matrix.setup.package_path lists in the steps below
env:
  SERVICE_PACKAGE_PATH: "app/connectors"
  SDK_PACKAGE_PATH: "lib/connectors_sdk"

steps:
  - group: ":building_construction: Build Python Packages"
    key: "build_package"
    steps:
      - label: ":python: Build Python {{matrix.python_version}} {{matrix.package_path}} package"
        key: build_python_package
        agents:
          provider: "gcp"
          machineType: "n1-standard-8"
          useVault: true
          image: family/enterprise-search-ubuntu-2204-connectors-py
        matrix:
          setup:
            python_version:
              - "3.10"
              - "3.11"
            package_path:
              - "${SERVICE_PACKAGE_PATH}"
              - "${SDK_PACKAGE_PATH}"
        commands:
          - "cd {{matrix.package_path}}"
          - "python{{matrix.python_version}} -m pip install --upgrade build twine"
          - "python{{matrix.python_version}} -m build"
          - "ls -lah dist/"
          - "python{{matrix.python_version}} -m twine check dist/*"
        artifact_paths:
          - "{{matrix.package_path}}/dist/*"

  - wait

  - group: ":test_tube: Publish to Test PyPI"
    key: "publish_to_test_pypi"
    depends_on:
      - build_package
    steps:
      - label: ":package: Publish to Test PyPI"
        key: publish_test_pypi
        agents:
          provider: "gcp"
          machineType: "n1-standard-8"
          useVault: true
          image: family/enterprise-search-ubuntu-2204-connectors-py
        env:
          TWINE_USERNAME: "__token__"
        matrix:
          setup:
            python_version:
              - "3.10"
              - "3.11"
            package_path:
              - "${SERVICE_PACKAGE_PATH}"
        commands:
          # splitting the assignment in 2 lines to avoid leaking the key in the buildkite logs
          - "TWINE_PASSWORD=$(vault read -field publishing-api-key secret/ent-search-team/test-pypi-ent-search-dev)"
          - "export TWINE_PASSWORD"
          - "mkdir -p {{matrix.package_path}}/dist"
          - "buildkite-agent artifact download '{{matrix.package_path}}/dist/*' ."
          - "cd {{matrix.package_path}}"
          - "python{{matrix.python_version}} -m pip install --upgrade twine"
          - "python{{matrix.python_version}} -m twine upload --repository testpypi dist/*"

  - block: ":rocket: Publish to Production PyPI?"
    prompt: "Test PyPI publish succeeded. Proceed to publish to Production PyPI?"
    key: "confirm_production_publish"
    depends_on:
      - publish_to_test_pypi

  - group: ":truck: Publish to Production PyPI"
    key: "publish_to_pypi"
    depends_on:
      - confirm_production_publish
    steps:
      - label: ":package: Publish to Production PyPI"
        key: publish_pypi
        agents:
          provider: "gcp"
          machineType: "n1-standard-8"
          useVault: true
          image: family/enterprise-search-ubuntu-2204-connectors-py
        env:
          TWINE_USERNAME: "__token__"
        matrix:
          setup:
            python_version:
              - "3.10"
              - "3.11"
            package_path:
              - "${SERVICE_PACKAGE_PATH}"
        commands:
          # splitting the assignment in 2 lines to avoid leaking the key in the buildkite logs
          - "TWINE_PASSWORD=$(vault read -field publishing-api-key secret/ent-search-team/pypi-ent-search-dev)"
          - "export TWINE_PASSWORD"
          - "mkdir -p {{matrix.package_path}}/dist"
          - "buildkite-agent artifact download '{{matrix.package_path}}/dist/*' ."
          - "cd {{matrix.package_path}}"
          - "python{{matrix.python_version}} -m pip install --upgrade twine"
          - "python{{matrix.python_version}} -m twine upload --repository pypi dist/*"
